Grading at 09/28/2021:20:17:50.720258
For commit ID d5ebc0cf1a24cc939a048297d063a9b7e4cb89c1
Grading at Tue Sep 28 16:17:45 EDT 2021
Attempting to compile sortLines.c
#################################################
testcase1:
testcase1 passed, your program successfully indicated a failure
  - Valgrind showed memory leaks
valgrind was not clean
==39057== Memcheck, a memory error detector
==39057== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==39057== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==39057== 
==39057== Parent PID: 39056
==39057== 
==39057== 
==39057== HEAP SUMMARY:
==39057==     in use at exit: 552 bytes in 1 blocks
==39057==   total heap usage: 15 allocs, 14 frees, 9,563 bytes allocated
==39057== 
==39057== LEAK SUMMARY:
==39057==    definitely lost: 0 bytes in 0 blocks
==39057==    indirectly lost: 0 bytes in 0 blocks
==39057==      possibly lost: 0 bytes in 0 blocks
==39057==    still reachable: 552 bytes in 1 blocks
==39057==         suppressed: 0 bytes in 0 blocks
==39057== Reachable blocks (those to which a pointer was found) are not shown.
==39057== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==39057== 
==39057== For counts of detected and suppressed errors, rerun with: -v
==39057== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
#################################################
testcase2:
Your output is correct
  - Valgrind was clean (no errors, no memory leaks)
valgrind was clean
#################################################
testcase3:
Your output is correct
  - Valgrind was clean (no errors, no memory leaks)
valgrind was clean
#################################################
testcase4:
Your output is correct
  - Valgrind showed memory leaks
valgrind was not clean
==39154== Memcheck, a memory error detector
==39154== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==39154== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==39154== 
==39154== Parent PID: 39153
==39154== 
==39154== 
==39154== HEAP SUMMARY:
==39154==     in use at exit: 552 bytes in 1 blocks
==39154==   total heap usage: 29 allocs, 28 frees, 14,004 bytes allocated
==39154== 
==39154== LEAK SUMMARY:
==39154==    definitely lost: 0 bytes in 0 blocks
==39154==    indirectly lost: 0 bytes in 0 blocks
==39154==      possibly lost: 0 bytes in 0 blocks
==39154==    still reachable: 552 bytes in 1 blocks
==39154==         suppressed: 0 bytes in 0 blocks
==39154== Reachable blocks (those to which a pointer was found) are not shown.
==39154== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==39154== 
==39154== For counts of detected and suppressed errors, rerun with: -v
==39154== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Overall Grade: B
